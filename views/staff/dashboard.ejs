<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard Staff</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ionicons/5.5.3/ionicons.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.js"></script>
    <style>
        .hover-effect {
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }
        .hover-effect:hover {
            transform: translateY(-5px);
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.2);
        }
        .date-input {
            cursor: pointer;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%23999' stroke-width='2'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 0.5rem center;
            background-size: 1.5em 1.5em;
            padding-right: 2.5rem;
        }
    </style>
</head>
<body class="h-screen flex flex-col bg-cover bg-center pt-[60px]" style="background-image: url('/images/bg_moka.png');">

    <!-- Navbar -->
    <%- include('../layout/navStaf') %>

    <!-- Kontainer Utama -->
    <div class="flex-grow flex justify-center items-start mt-[65px] w-full">
        <div class="bg-white bg-opacity-90 rounded-[10px] p-8 shadow-lg w-[1229px]">
            
            <!-- Header Dashboard & Filter -->
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-[#C15E15]">Dashboard</h2>
                
                <!-- Filter di Sebelah Kanan -->
                <div class="flex space-x-4 items-center">
                    <input type="text" value="<%= user.bidang %>" disabled class="p-2 border rounded-md bg-gray-100 text-gray-700 font-semibold w-48">
                    <input type="text" id="tanggalMulai" class="p-2 border rounded-md date-input" placeholder="Tanggal Mulai" readonly>
                    <input type="text" id="tanggalAkhir" class="p-2 border rounded-md date-input" placeholder="Tanggal Akhir" readonly>
                    <button id="filterButton" class="p-2 bg-[#C15E15] text-white rounded-md hover:bg-[#A64D0A] transition-colors">Filter</button>
                </div>
            </div>

            <!-- Statistik Ringkas dengan Efek -->
            <div class="grid grid-cols-4 gap-4 mb-6">
                <a href="/staff/daftarTugas" class="flex items-center p-3 rounded-lg shadow-md hover-effect bg-[#C15E15] text-white">
                    <ion-icon name="mail-unread-outline" class="text-3xl mr-3"></ion-icon>
                    <div>
                        <h3 class="text-sm font-semibold">Penugasan Belum Dibaca</h3>
                        <p id="tugasBelumDibaca" class="text-xl font-bold">
                            <%= stats ? stats.tugasBelumDibaca : 0 %>
                        </p>
                    </div>
                </a>
                <a href="/staff/daftarTugas" class="flex items-center p-3 rounded-lg shadow-md hover-effect bg-yellow-500 text-white">
                    <ion-icon name="time-outline" class="text-3xl mr-3"></ion-icon>
                    <div>
                        <h3 class="text-sm font-semibold">Penugasan Belum Selesai</h3>
                        <p id="rincianBelumSelesai" class="text-xl font-bold">
                            <%= stats ? stats.rincianBelumSelesai : 0 %>
                        </p>
                    </div>
                </a>
                
                <a href="/staff/tugas" class="flex items-center p-3 rounded-lg shadow-md hover-effect bg-blue-500 text-white">
                    <ion-icon name="checkmark-done-outline" class="text-3xl mr-3"></ion-icon>
                    <div>
                        <h3 class="text-sm font-semibold">Rincian Tugas Diberikan</h3>
                        <p id="rincianDiberikan" class="text-xl font-bold">
                            <%= stats ? stats.rincianDiberikan : 0 %>
                        </p>
                    </div>
                </a>
                <a href="/staff/tugas" class="flex items-center p-3 rounded-lg shadow-md hover-effect bg-red-500 text-white">
                    <ion-icon name="refresh-circle-outline" class="text-3xl mr-3"></ion-icon>
                    <div>
                        <h3 class="text-sm font-semibold">Rincian Tugas Revisi</h3>
                        <p id="rincianDirevisi" class="text-xl font-bold">
                            <%= stats ? stats.rincianDirevisi : 0 %>
                        </p>
                    </div>
                </a>
            </div>

            <!-- Chart Container -->
            <div class="w-full">
                <h3 class="text-lg font-semibold text-center text-gray-700 mb-2">10 Penerima Tugas Terbanyak</h3>
                <canvas id="barChart" style="max-height: 300px;"></canvas>
            </div>

            <!-- Total Jumlah Tugas di Barchart -->
            <div class="mt-6 p-3 bg-gray-100 rounded-lg text-center mb-8">
                <h3 class="text-sm font-semibold text-gray-700">Total Tugas yang Diberikan</h3>
                <p id="totalTugasDiberikan" class="text-2xl font-bold text-[#C15E15]">
                    <%= stats ? stats.totalTugasDiberikan : 0 %>
                </p>
            </div>
        </div>
    </div>

    <!-- Hidden input to store JSON data -->
    <input type="hidden" id="assigneesData" value='<%= JSON.stringify(top10Assignees || []) %>'>

    <script>
        const ctx = document.getElementById('barChart').getContext('2d');
        let barChart;

        // Get data from hidden input
        const initialAssigneesRaw = document.getElementById('assigneesData').value;
        const initialAssignees = initialAssigneesRaw ? JSON.parse(initialAssigneesRaw) : [];

        function renderChart(data) {
            if (barChart) {
                barChart.destroy();
            }
            
            // If no data, show placeholder message
            if (data.length === 0) {
                const container = document.getElementById('barChart').parentElement;
                const existingCanvas = document.getElementById('barChart');
                const placeholderDiv = document.createElement('div');
                placeholderDiv.id = 'chartPlaceholder';
                placeholderDiv.className = 'flex items-center justify-center h-64 border border-dashed border-gray-300 rounded-lg';
                placeholderDiv.innerHTML = '<p class="text-gray-500">Tidak ada data untuk ditampilkan</p>';
                
                existingCanvas.style.display = 'none';
                if (!document.getElementById('chartPlaceholder')) {
                    container.appendChild(placeholderDiv);
                }
                return;
            }
            
            // Hide placeholder if exists and show canvas
            const placeholderDiv = document.getElementById('chartPlaceholder');
            if (placeholderDiv) {
                placeholderDiv.remove();
            }
            document.getElementById('barChart').style.display = 'block';
            
            let initialData = data.map(() => 0);
            barChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.nama),
                    datasets: [{
                        label: 'Jumlah Rincian Tugas',
                        data: initialData,
                        backgroundColor: '#C15E15'
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: { title: { display: true, text: "Jumlah Rincian Tugas" }, beginAtZero: true },
                        y: { title: { display: true, text: "Nama" } }
                    }
                }
            });

            gsap.to(barChart.data.datasets[0].data, {
                duration: 2,
                ease: "power3.out",
                onUpdate: function () {
                    barChart.update();
                },
                onComplete: function () {
                    barChart.data.datasets[0].data = data.map(d => d.jumlah);
                    barChart.update();
                },
                snap: { innerText: 1 },
                innerText: data.map(d => d.jumlah)
            });
        }

        function animateNumber(id, targetValue) {
            const currentValue = parseInt(document.getElementById(id).innerText);
            
            gsap.to(`#${id}`, {
                duration: 2,
                innerText: targetValue,
                snap: { innerText: 1 },
                ease: "power3.out",
                onUpdate: function() {
                    document.getElementById(id).innerText = Math.floor(this.targets()[0].innerText);
                }
            });
        }

        // Initialize date pickers using flatpickr
        document.addEventListener('DOMContentLoaded', function() {
            const dateConfig = {
                dateFormat: "d/m/Y",
                locale: {
                    firstDayOfWeek: 1,
                    weekdays: {
                        shorthand: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
                        longhand: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    },
                    months: {
                        shorthand: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agu", "Sep", "Okt", "Nov", "Des"],
                        longhand: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    }
                },
                allowInput: true
            };
            
            // Initialize datepickers
            const tanggalMulaiPicker = flatpickr("#tanggalMulai", dateConfig);
            const tanggalAkhirPicker = flatpickr("#tanggalAkhir", dateConfig);
            
            // Set default date range (1 Januari 2025 - 31 Desember 2025)
            const currentYear = new Date().getFullYear();
            const firstDayOfYear = new Date(currentYear, 0, 1); // 1 Januari tahun ini
            const lastDayOfYear = new Date(currentYear, 11, 31); // 31 Desember tahun ini
            
            tanggalMulaiPicker.setDate(firstDayOfYear);
            tanggalAkhirPicker.setDate(lastDayOfYear);
            
            // Initial chart render
            renderChart(initialAssignees);
        });

        // Parse date from DD/MM/YYYY format to YYYY-MM-DD for backend
        function formatDateForBackend(dateString) {
            const parts = dateString.split('/');
            if (parts.length !== 3) return '';
            
            const day = parts[0];
            const month = parts[1];
            const year = parts[2];
            
            return `${year}-${month}-${day}`;
        }

        // Handle filter button click
        document.getElementById('filterButton').addEventListener('click', async function() {
            const tanggalMulaiStr = document.getElementById('tanggalMulai').value;
            const tanggalAkhirStr = document.getElementById('tanggalAkhir').value;
            
            // Format dates for backend
            const startDate = formatDateForBackend(tanggalMulaiStr);
            const endDate = formatDateForBackend(tanggalAkhirStr);
            
            try {
                // Build query string
                let queryParams = [];
                if (startDate) queryParams.push(`startDate=${startDate}`);
                if (endDate) queryParams.push(`endDate=${endDate}`);
                
                const queryString = queryParams.length > 0 ? '?' + queryParams.join('&') : '';
                
                // Fetch filtered data
                const response = await fetch(`/staff/dashboard/data${queryString}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to fetch filtered data');
                }
                
                const data = await response.json();
                
                // Update statistics with animation
                animateNumber("tugasBelumDibaca", data.stats.tugasBelumDibaca);
                animateNumber("rincianBelumSelesai", data.stats.rincianBelumSelesai);
                animateNumber("rincianDirevisi", data.stats.rincianDirevisi);
                animateNumber("rincianDiberikan", data.stats.rincianDiberikan);
                animateNumber("totalTugasDiberikan", data.stats.totalTugasDiberikan);
                
                // Update chart
                renderChart(data.top10Assignees);
                
            } catch (error) {
                console.error('Error fetching filtered data:', error);
                alert('Gagal memuat data. Silakan coba lagi.');
            }
        });
    </script>
    
    <!-- Footer -->
    <%- include('../layout/footer') %>
</body>
</html>
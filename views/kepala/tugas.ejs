<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tugas</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/@heroicons/react/solid"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ionicons/5.5.3/ionicons.min.js"></script>
    <!-- Import SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="h-screen flex flex-col bg-cover bg-center pt-[60px]" style="background-image: url('/images/bg_moka.png');">
    
    <!-- Navbar -->
    <%- include('../layout/navKepala') %>
    
    <!-- Kontainer Utama -->
    <div class="flex-grow flex-justify-center items-start mt-[80px] mx-[20px]">
        <div class="bg-white bg-opacity-90 rounded-[10px] p-8 shadow-lg ">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-[#C15E15]">Tugas</h2>
                <a href="/kepala/formAddTugas" class="px-4 py-2 bg-[#C15E15] text-white rounded-md hover:bg-[#A14B10]">Tambah Tugas</a>
            </div>
            
            <!-- Tabel -->
            <div class="overflow-auto w-full">
                <table class="w-full border-collapse border border-gray-300 text-center">
                    <thead>
                        <tr class="bg-[#C15E15] text-white">
                            <th class="p-3 border">No</th>
                            <th class="p-3 border">Nama Tugas</th>
                            <th class="p-3 border">Dibuat</th>
                            <th class="p-3 border">Tenggat</th>
                            <th class="p-3 border">Ditugaskan Ke</th>
                            <th class="p-3 border">Status Baca</th>
                            <th class="p-3 border">Waktu Baca</th>
                            <th class="p-3 border">Progres</th>
                            <th class="p-3 border">Aksi</th>
                        </tr>
                    </thead>
                    <tbody class="text-gray-700">
                        <% 
                        function formatDateTime(isoString, adjustTimezone = false) {
                            if (!isoString || isoString === '-') return { time: '-', date: '' };
                            
                            const date = new Date(isoString);
                            if (adjustTimezone) {
                                date.setHours(date.getHours() + 7); // Only adjust if needed
                            }
                            
                            const timePart = date.toTimeString().split(' ')[0].slice(0, 5);
                            const day = String(date.getDate()).padStart(2, '0');
                            const month = String(date.getMonth() + 1).padStart(2, '0');
                            const year = date.getFullYear();
                            
                            return {
                                time: timePart,
                                date: `${day}/${month}/${year}`
                            };
                        }

                        function allValuesAreSame(arr) {
                            return arr.every(val => val === arr[0]);
                        }

                        function groupStaffAndStatus(task) {
                            const staffGroups = {};
                            
                            task.namaStaff.forEach((staff, index) => {
                                if (!staffGroups[staff]) {
                                    staffGroups[staff] = {
                                        statusBaca: [],
                                        readAt: [],
                                        keterangan: []
                                    };
                                }
                                staffGroups[staff].statusBaca.push(task.statusBaca[index]);
                                staffGroups[staff].readAt.push(task.readAt[index]);
                                staffGroups[staff].keterangan.push(task.keterangan[index]);
                            });

                            return Object.entries(staffGroups).map(([staff, data]) => ({
                                staff,
                                statusBaca: allValuesAreSame(data.statusBaca) ? [data.statusBaca[0]] : data.statusBaca,
                                readAt: allValuesAreSame(data.readAt) ? [data.readAt[0]] : data.readAt,
                                keterangan: allValuesAreSame(data.keterangan) ? [data.keterangan[0]] : data.keterangan
                            }));
                        }

                        // Mengurutkan tasks berdasarkan createdAt secara descending
                        const sortedTasks = [...tasks].sort((a, b) => 
                            new Date(a.createdAt) - new Date(b.createdAt)
                        );

                        let rowIndex = 1;
                        sortedTasks.forEach(task => {
                            const groupedStaff = groupStaffAndStatus(task);
                            const totalRows = groupedStaff.reduce((sum, group) => 
                                sum + Math.max(group.statusBaca.length, group.keterangan.length), 0);
                        %>
                            <% groupedStaff.forEach((group, groupIndex) => {
                                const staffRows = Math.max(group.statusBaca.length, group.keterangan.length);
                            %>
                                <% for(let i = 0; i < staffRows; i++) { %>
                                    <tr class="border">
                                        <% if (groupIndex === 0 && i === 0) { %>
                                            <td class="p-2 border text-center" rowspan="<%= totalRows %>"><%= rowIndex %></td>
                                            <td class="p-2 border" rowspan="<%= totalRows %>"><%= task.taskName %></td>
                                            <!-- For createdAt (needs timezone adjustment) -->
                                            <td class="p-2 border text-center" rowspan="<%= totalRows %>">
                                                <% const created = formatDateTime(task.createdAt.toISOString(), false) %>
                                                <div><%= created.time %></div>
                                                <div class="text-sm"><%= created.date %></div>
                                            </td>

                                            <!-- For deadline (no timezone adjustment needed) -->
                                            <td class="p-2 border text-center" rowspan="<%= totalRows %>">
                                                <% const deadline = formatDateTime(task.deadline.toISOString(), false) %>
                                                <div><%= deadline.time %></div>
                                                <div class="text-sm"><%= deadline.date %></div>
                                            </td>
                                        <% } %>

                                        <% if (i === 0) { %>
                                            <td class="p-2 border" rowspan="<%= staffRows %>"><%= group.staff %></td>
                                        <% } %>

                                        <td class="p-2 border">
                                            <span class="px-3 py-1 rounded-md text-white <%= group.statusBaca[i] === 'Sudah dibaca' ? 'bg-green-500' : 'bg-red-500' %>">
                                                <%= group.statusBaca[i] || group.statusBaca[0] %>
                                            </span>
                                        </td>
                                        <td class="p-2 border">
                                            <% 
                                            const readTime = group.readAt[i];
                                            if (readTime && readTime !== '-') {
                                                const readAt = formatDateTime(readTime instanceof Date ? readTime.toISOString() : readTime, false);
                                            %>
                                                <div><%= readAt.time %></div>
                                                <% if (readAt.date) { %>
                                                    <div class="text-sm"><%= readAt.date %></div>
                                                <% } %>
                                            <% } else { %>
                                                <div>-</div>
                                            <% } %>
                                        </td>
                                        <% if (groupIndex === 0 && i === 0) { %>
                                            <td class="p-2 border" rowspan="<%= totalRows %>">
                                                <div class="flex items-center justify-between bg-[#D9D9D9] rounded-full px-3 py-2 space-x-2">
                                                    <span><%= task.progress %></span>
                                                    <a href="/kepala/infoProgresTugas/<%= task.taskID %>" 
                                                    class="bg-blue-500 p-2 rounded-full hover:bg-blue-700 flex items-center justify-center">
                                                        <ion-icon name="information-circle-outline" class="text-white text-xl"></ion-icon>
                                                    </a>
                                                </div>
                                            </td>

                                            <td class="p-2 border" rowspan="<%= totalRows %>">
                                                <div class="flex items-center justify-center space-x-2">
                                                    <a href="../admin/formEditTask/<%= task.taskID %>" 
                                                    class="bg-green-500 p-2 rounded-full hover:bg-green-700 flex items-center justify-center">
                                                        <ion-icon name="pencil-outline" class="text-white text-lg"></ion-icon>
                                                    </a>
                                                    <button onclick="openDeleteModal('<%= task.taskID %>')" 
                                                            class="bg-red-500 p-2 rounded-full hover:bg-blue-700 flex items-center justify-center">
                                                        <ion-icon name="trash-outline" class="text-white text-lg"></ion-icon>
                                                    </button>
                                                </div>
                                            </td>
                                        <% } %>
                                    </tr>
                                <% } %>
                            <% }); %>
                        <% 
                            rowIndex++;
                        }); 
                        %>
                    </tbody>                                                                   
                </table>
                
            </div>
        </div>
    </div>
     <!-- Footer -->
     <%- include('../layout/footer') %>

     <script>
        function openDeleteModal(taskId) {
            Swal.fire({
                title: "Konfirmasi Hapus",
                text: "Apakah Anda yakin ingin menghapus tugas ini?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#808080",
                confirmButtonText: "Ya, Hapus",
                cancelButtonText: "Batal",
                heightAuto: false
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/deleteTask/" + taskId;
                }
            });
        }
     </script>
</body>
</html>

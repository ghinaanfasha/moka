<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Progress Tugas</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ionicons/5.5.3/ionicons.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="min-h-screen flex flex-col bg-cover bg-center pt-[60px]" style="background-image: url('/images/bg_moka.png');">
    
    <!-- Navbar -->
    <%- include('../layout/navStaf') %>
    <a href="/staff/tugas" class="absolute left-10 top-[110px] flex items-center text-[#C15E15] hover:text-[#A14B10]">
        <ion-icon name="arrow-back-outline" class="text-3xl mr-2"></ion-icon>
        <span class="text-lg font-medium">Kembali</span>
    </a>
    
    <!-- Kontainer Utama -->
    <div class="flex flex-grow justify-center items-start mt-[90px]">
        <div class="bg-white bg-opacity-90 rounded-[10px] p-5 pb-5 shadow-lg w-[1229px]">
            
            <!-- Header -->
            <h2 class="text-2xl font-bold text-[#C15E15] mb-4">Progress Tugas</h2>

            <!-- Informasi Tugas -->
            <div class="flex items-start">
                <div class="w-1/2 pr-4 text-gray-600">
                    <div class="flex">
                        <span class="w-[140px] font-medium">Nama Tugas</span>
                        <span class="mr-2">:</span> 
                        <span class="font-light"><%= taskData.taskInfo.taskName %></span>
                    </div>
                    <div class="flex mt-1">
                        <span class="w-[140px] font-medium">Penugas</span>
                        <span class="mr-2">:</span>
                        <span class="font-light"><%= taskData.taskInfo.assignor %></span>
                    </div>
                    <div class="flex mt-1">
                        <span class="w-[140px] font-medium">Deskripsi</span>
                        <span class="mr-2">:</span>
                        <span class="font-light"><%= taskData.taskInfo.taskDesc %></span>
                    </div>
                </div>
                <div class="border-l border-gray-400 h-full mx-4"></div>
                <div class="w-1/2 pl-4 text-gray-600">
                    <div class="flex">
                        <span class="w-[130px] font-medium">Dokumen</span>
                        <span class="mr-2">:</span>
                        <% if (taskData.taskInfo.taskFile) { %>
                            <a href="/files/<%= taskData.taskInfo.taskFile %>" class="text-blue-500 underline">Download File</a>
                        <% } else { %>
                            <span>-</span>
                        <% } %>
                    </div>
                    <div class="flex mt-1">
                        <span class="w-[130px] font-medium">Dibuat</span>
                        <span class="mr-2">:</span>
                        <span class="font-light">
                            <%= new Date(taskData.taskInfo.createdAt).toLocaleString('id-ID', { 
                                year: 'numeric',
                                month: '2-digit',
                                day: '2-digit',
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: false
                            }).replace(/\./g, ':') %>
                        </span>
                    </div>
                    <div class="flex mt-1">
                        <span class="w-[130px] font-medium">Tenggat</span>
                        <span class="mr-2">:</span>
                        <span class="font-light">
                            <%= new Date(taskData.taskInfo.deadline).toLocaleString('id-ID', {
                                year: 'numeric',
                                month: '2-digit',
                                day: '2-digit',
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: false
                            }).replace(/\./g, ':') %>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Tabel -->
            <div class="overflow-auto w-full mt-6">
                <table class="w-full border-collapse border border-gray-300">
                    <thead>
                        <tr class="bg-[#C15E15] text-white">
                            <th class="p-3 border text-center">No</th>
                            <th class="p-3 border text-center">Rincian Tugas</th>
                            <th class="p-3 border text-center">Penanggung Jawab</th>
                            <th class="p-3 border text-center">Status Pengerjaan</th>
                            <th class="p-3 border text-center">Waktu Selesai</th>
                            <th class="p-3 border text-center">Dokumen</th>
                            <th class="p-3 border text-center">Catatan</th>
                            <th class="p-3 border text-center">Feedback</th>
                            <th class="p-3 border text-center">Keterangan</th>
                        </tr>
                    </thead>
                    <tbody id="keteranganTableBody" class="text-gray-700">
                        <% taskData.breakdowns.forEach((breakdown, index) => { %>
                            <tr class="border">
                                <td class="p-1 border text-center"><%= index + 1 %></td>
                                <td class="p-1 border"><%= breakdown.taskBreakdown %></td>
                                <td class="p-1 border text-center"><%= breakdown.assignee %></td>
                                <td class="p-1 border text-center text-white">
                                    <span class="px-2 py-1 rounded-md 
                                        <%= breakdown.breakdownStatus === 'Selesai' ? 'bg-green-500' : 'bg-red-500' %>">
                                        <%= breakdown.breakdownStatus %>
                                    </span>
                                </td>
                                <td class="p-1 border text-center">
                                    <%
                                        function formatDateTime(isoString, adjustTimezone = false) {
                                            if (!isoString || isoString === '-') return { time: '-', date: '' };
                                            
                                            const date = new Date(isoString);
                                            if (adjustTimezone) {
                                                date.setHours(date.getHours() + 7); // Only adjust if needed
                                            }
                                            
                                            const timePart = date.toTimeString().split(' ')[0].slice(0, 5);
                                            const day = String(date.getDate()).padStart(2, '0');
                                            const month = String(date.getMonth() + 1).padStart(2, '0');
                                            const year = date.getFullYear();
                                            
                                            return {
                                                time: timePart,
                                                date: `${day}/${month}/${year}`
                                            };
                                        }
                                    %>
                                    <% 
                                        let submitTime;
                                        if (breakdown.submitTime) {
                                            submitTime = formatDateTime(breakdown.submitTime.toISOString(), false);
                                        } else {
                                            submitTime = { time: '-', date: '' }; // Default value if submitTime is null
                                        }
                                    %>
                                    <div><%= submitTime.time %></div>
                                    <div class="text-sm"><%= submitTime.date %></div>
                                </td>
                                <td class="p-1 border text-center">
                                    <% if (breakdown.submitTask) { %>
                                        <a href="/files/<%= breakdown.submitTask %>" class="text-blue-500 underline">Lihat Dokumen</a>
                                    <% } else { %>
                                        -
                                    <% } %>
                                </td>
                                <td class="p-1 border"><%= breakdown.taskNote || '-' %></td>
                                <td class="p-1 border">
                                    <textarea 
                                        class="w-full p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#C15E15]" 
                                        rows="1" 
                                        placeholder="Beri feedback"
                                        data-breakdown-id="<%= breakdown.taskBreakdownID %>"
                                    ><%= breakdown.feedback || '' %></textarea>
                                </td>
                                <td class="p-1 border">
                                    <select 
                                        class="keteranganDropdown w-full p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#C15E15]"
                                        data-breakdown-id="<%= breakdown.taskBreakdownID %>"
                                        onchange="updateKeteranganColor(this)"
                                    >
                                        <option value="Diberikan" <%= breakdown.taskStatus === 'Diberikan' ? 'selected' : '' %>>Diberikan</option>
                                        <option value="Revisi" <%= breakdown.taskStatus === 'Revisi' ? 'selected' : '' %>>Revisi</option>
                                        <option value="Selesai" <%= breakdown.taskStatus === 'Selesai' ? 'selected' : '' %>>Selesai</option>
                                    </select>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <div class="flex mt-1">
                <span class="w-[250px] font-medium">Persentase Penyelesaian Tugas</span>
                <span class="mr-2">:</span>
                <span class="font-light"><%= taskData.progress %></span>
            </div>

            <!-- Tombol Simpan -->
            <div class="flex justify-end mt-4">
                <button id="saveButton" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition">
                    Simpan Perubahan
                </button>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <%- include('../layout/footer') %>

    <script>
        document.getElementById("saveButton").addEventListener("click", async function() {
            try {
                // Array untuk menyimpan semua update
                const updates = [];
                
                // Dapatkan semua taskBreakdownID yang unik
                const uniqueBreakdownIds = new Set();
                document.querySelectorAll('[data-breakdown-id]').forEach(element => {
                    uniqueBreakdownIds.add(element.dataset.breakdownId);
                });
                
                // Untuk setiap breakdown ID, kumpulkan feedback dan status
                uniqueBreakdownIds.forEach(breakdownId => {
                    const feedbackTextarea = document.querySelector(`textarea[data-breakdown-id="${breakdownId}"]`);
                    const statusSelect = document.querySelector(`select[data-breakdown-id="${breakdownId}"]`);
                    
                    const update = {
                        taskBreakdownID: breakdownId,
                        feedback: feedbackTextarea.value,
                        taskStatus: statusSelect.value
                    };
                    
                    updates.push(update);
                });

                // Tampilkan loading state
                const saveButton = document.getElementById("saveButton");
                const originalText = saveButton.textContent;
                saveButton.textContent = "Menyimpan...";
                saveButton.disabled = true;

                // Kirim request ke backend
                const response = await fetch('/staff/updateTaskProgress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ updates })
                });

                if (response.ok) {
                    // Tampilkan notifikasi sukses
                    Swal.fire({
                        icon: "success",
                        title: "Perubahan Disimpan",
                        text: "Progress tugas telah diperbarui.",
                        confirmButtonColor: "#C15E15"
                    }).then(() => {
                        // Refresh halaman untuk menampilkan data terbaru
                        window.location.reload();
                    });
                } else {
                    throw new Error('Failed to update');
                }

            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: "error",
                    title: "Gagal Menyimpan",
                    text: "Terjadi kesalahan saat menyimpan perubahan.",
                    confirmButtonColor: "#C15E15"
                });
            } finally {
                // Kembalikan button ke state awal
                saveButton.textContent = originalText;
                saveButton.disabled = false;
            }
        });

        // Fungsi untuk memperbarui warna dropdown berdasarkan status
        function updateKeteranganColor(selectElement) {
            const selectedOption = selectElement.value;
            const colors = {
                "Diberikan": "bg-blue-500 text-white",
                "Selesai": "bg-green-500 text-white",
                "Revisi": "bg-red-500 text-white"
            };
            
            // Hapus semua kelas warna yang mungkin ada sebelumnya
            selectElement.className = "w-full p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[#C15E15]";
            
            // Tambahkan kelas warna baru
            if (colors[selectedOption]) {
                selectElement.classList.add(...colors[selectedOption].split(' '));
            }
        }

        // Inisialisasi warna untuk semua dropdown saat halaman dimuat
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.keteranganDropdown').forEach(dropdown => {
                updateKeteranganColor(dropdown);
            });
        });
    </script>
</body>
</html>